2021.12.10

я хочу с помощью программ тестирования API отправлять и принимать данные. Основываясь на полученных данных,
делать вывод о правильно индицирующих объектах или нет. 
Цикл теста ожидается следующий:  отправил команду, подождал, спросил состояние объекта, определил итог теста по состоянию, записал в протокол

Важна именно визуализация а не секшн модель, потому что в отображалке тоже можно накосячить, назвать не так объект, разукрасить его не 
теми цветовыми наборами и пр. 

что нужно сделать?

Необходимо прослушивать порт и обрабатывать 2 типа запросов:
Порт прослушки указывается в параметрах запуска программы, пример: /testport:5555

Запрос и ответ в кодировке ANSI cp1251.

1 - команда (например так "CMD:9:Н1:Н1 Ч:0"), (9 - тип объекта, Н1 - название объекта, Н1 Ч - команда, 0 - тип команды) 
  типы команд: 0 - обычная, 1 - предварительная, 2 - ответственная

которая проверяет наличие такого объекта и наличие данной команды у объекта.
 При отсылке команды необходимо давать ответ. успешно отправлена или нет (например "CMD:Н1 Ч:OK"/"CMD:Н1 Ч:NO"). 
 ответственные команды, предлагаю писать следующим образом "CMD:24:ГРИ:ПГРИ:1" - предварительная, "CMD:24:ГРИ:ГРИ:2" - ответственная
 никаких подтверждений или окон не надо выводить, но если команда была ответственная, а была принята команда на 
 обычную "CMD:24:ГРИ:ГРИ:0", то в ответе писать "CMD:1РИ:NO"

2 - команда Получить состояние объекта/объектов визуализации (например "GET:9:Н/nGET:1:1/nGET:1:3"), которая будет возвращать
собственно состояние объекта/-ов.
светофор, объект, кнопка и пр., можно передавать в визуализацию цифрами, не текстом, здесь как удобнее
в ответе ожидается примерно следующее
"9:Н1:0,25489,255:1,255:3,124/n1:3:0,23456:1,4354" , содержит цвет примитивов у конкретного слоя объекта. 
например: 0,25489,255  (0 - номер слоя, 25489 - цвет активной фазы мигания, 255 - цвет пассивной фазы мигания)
          1,255 (1- номер слоя, 255 - цвет примитива этого слоя)
или "9:Н1:NO", если такого объекта не существует.
!!Если найдено несколько примитивов одного слоя, но отображаемых разным цветом, то выдается результат для каждого со своим цветом.

чтобы не забыть про такую функцию, предлагаю точно так же снизу на визуализации, например синим цветом подсвечивать и
писать "автотест"



Как будет выглядеть тест ожидаемый
команды через запятую ; состояния через запятую
Н1 Ч, Ждать 10; светофор Н1 желт, стрСекция 2-4СП контрЗел

1. отправили команду Н1 Ч (CMD:Н1 Ч)
2. получили ответ OK\NO. в случае NO записали тест как неуспешный
3. подождали 10секунд. необхдимо, например для отработки имитатора МПЦ или еще какого для перевода всех стрелок, замыкания секций и зажигания сигнала
4. спросили состояние светофора Н1 у визуализации (GET:светофор:Н1)
5. получили ответ (светофор:Н1:1,0,1). в случае NO завершаем тест как неуспешный
6. спросили состояние стрелочной секции 2-4СП у визуализации (GET:стрСекция:2-4СП)
7. получили ответ (стрСекция:2-4СП:1,0,1). в случае NO завершаем тест как неуспешный
8. по состоянию объектов сделали вывод об успешности теста
-------------



формат файла t1_exp.txt

строка 
      либо (п.1) цифра                   
      либо (п.2) перевод строки
      либо (п.3) строка формата A:B:C:D 
      либо (п.4) строка формата A:B

вырезать все, что после #
удалить все пробелы и символы табуляций до и после слов

--------
п.1  цифра 
если в начале указана цифра, то безусловно ожидать указанное цифрой время (в секундах)
пример:
20  
означает, что необходимо ожидать 20с
--------
п.2  пустая строка
перейти к следующей строке, ничего не делать
--------
п.3 строка формата A:B:C:D 
для строки такого формата, разбить строку на : и удалить все символы пробелов и табуляций до\после слов
Например
  св  

A  - тип объекта. Указано проектировщиком и следует заменить на число из файла conv_out.txt
     например св -> 9
     
     если названия объекта нет в файле conv_out.txt, писать в t1_log.txt
     [2021-12-12 12:12:12.000] файл t1.txt, строка 4, неверный или неописанный тип объекта св
     и завершить тест НЕ удачно

     А всегда приводить к нижнему регистру 



B  - название объекта. Передается как есть
C  - название команды. Передается как есть
:D - опционально, если есть хотя бы : , то это Ответственная команда и заменить при отправке на :1. 
 в остальных случаях (без :), то заменить на :0

пример
св:Н1:Н1 Ч  # замена св без учета регистра

п.3 строка формата A:B:C:D 

склеить назад, отправить

----------------
формат файла conv_out.txt
# комментарий от решетки до конца строки
объект ; номер объекта для передачи      #здесь опять может быть комментарий

например

 св      ; 9       #сокращенное описание светофора
 СвЕтоФор; 9       #все слова до ; приводить к нижнему регистру
 стрелка ; 5



----------------
формат файла t1.txt




----------------
формат файла t1_log.txt
файл должен выглядеть примерно так:

[15.12.2021, 14:06:08] отправили: 9
        получили: 12345678
[15.12.2021, 14:06:58] отправили: 9
        получили: 12345678
[15.12.2021, 14:09:37] отправили: 9
        получили: 12345678
[15.12.2021, 14:15:35] отправили: 9
        получили: 12345678
[15.12.2021, 14:15:52] отправили: 9
        получили: 123
[15.12.2021, 14:17:33] отправили: 9     получили: 12345678
[15.12.2021, 14:19:09] отправили: 9     получили: 123

обязательно должно быть указано:
-время и дата прохождения отправки команды
-то, что было отправлено в Программу
-то, что было принято от Программы

----------------
формат файла t1_out.txt
файл должен выглядеть примерно так:

[15.12.2021, 14:06:08] Тест "Команда 1" пройден
[15.12.2021, 14:06:58] Тест "Команда 1" пройден
[15.12.2021, 14:09:37] Тест "Команда 1" пройден
[15.12.2021, 14:15:35] Тест "Команда 1" пройден
[15.12.2021, 14:15:52] Тест "Команда 1" НЕ пройден
[15.12.2021, 14:17:33] Тест "Команда 1" пройден
[15.12.2021, 14:19:09] Тест "Команда 1" НЕ пройден

обязательно должно быть указано:
-время и дата прохождения теста
-его название 
-статус (пройден, не пройден)
